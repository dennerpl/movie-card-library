{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-movie-card-library-stateful/sd-07-project-movie-card-library-stateful/src/components/MovieLibrary.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\n\nclass MovieLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.searchText = event => {\n      const {\n        target\n      } = event;\n      this.setState({\n        [target.name]: target.value\n      }, this.updateMoviesByText);\n    };\n\n    this.bookmarkedOnly = event => {\n      const {\n        target\n      } = event;\n      this.setState({\n        [target.name]: target.checked\n      }, this.updateMoviesByCheckbox);\n    };\n\n    this.updateMoviesByText = () => {\n      let newList = this.state.movies.filter(movie => movie.title.toLowerCase().includes(this.state.searchText.toLowerCase()));\n      this.setState({\n        movies: newList\n      });\n\n      if (this.state.searchText === \"\") {\n        this.setState({\n          movies: this.props.movies\n        });\n      }\n    };\n\n    this.selectedGenre = event => {\n      const {\n        target\n      } = event;\n      this.setState({\n        [target.name]: target.value\n      }, this.updateMoviesByGenre);\n    };\n\n    this.updateMoviesByGenre = () => {\n      let newList = this.state.movies.filter(movie => movie.genre === this.selectedGenre);\n      this.setState({\n        movies: newList\n      });\n\n      if (this.state.searchText === \"\") {\n        this.setState({\n          movies: this.props.movies\n        });\n      }\n    };\n\n    this.addNewMovie = movie => {\n      this.setState((previousState, _props) => ({\n        movies: [...previousState.movies, movie]\n      }));\n    };\n\n    this.updateMoviesByCheckbox = () => {\n      if (this.state.bookmarkedOnly === true) {\n        let newList = this.state.movies.filter(movie => movie.bookmarked === true);\n        this.setState({\n          movies: newList\n        });\n      } else if (this.state.bookmarkedOnly === false) {\n        this.setState({\n          movies: this.props.movies\n        });\n      }\n    };\n\n    this.state = {\n      searchText: \"\",\n      bookmarkedOnly: false,\n      selectedGenre: \"\",\n      movies: props.movies\n    };\n    this.searchText = this.searchText.bind(this);\n    this.updateMoviesByText = this.updateMoviesByText.bind(this);\n    this.bookmarkedOnly = this.bookmarkedOnly.bind(this);\n    this.updateMoviesByCheckbox = this.updateMoviesByCheckbox.bind(this);\n    this.selectedGenre = this.selectedGenre.bind(this);\n    this.updateMoviesByGenre = this.updateMoviesByGenre.bind(this);\n    this.addNewMovie = this.addNewMovie.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      searchText: this.searchText,\n      bookmarkedOnly: this.bookmarkedOnly,\n      selectedGenre: this.selectedGenre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(MovieList, {\n      movies: this.state.movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AddMovie, {\n      addNewMovie: this.addNewMovie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nMovieLibrary.propTypes = {\n  movie: PropTypes.func.isRequired\n};\nexport default MovieLibrary;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-movie-card-library-stateful/sd-07-project-movie-card-library-stateful/src/components/MovieLibrary.jsx"],"names":["React","PropTypes","MovieList","SearchBar","AddMovie","MovieLibrary","Component","constructor","props","searchText","event","target","setState","name","value","updateMoviesByText","bookmarkedOnly","checked","updateMoviesByCheckbox","newList","state","movies","filter","movie","title","toLowerCase","includes","selectedGenre","updateMoviesByGenre","genre","addNewMovie","previousState","_props","bookmarked","bind","render","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\n\n\nclass MovieLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: \"\",\n      bookmarkedOnly: false,\n      selectedGenre: \"\",\n      movies: props.movies,\n    };\n    this.searchText = this.searchText.bind(this);\n    this.updateMoviesByText = this.updateMoviesByText.bind(this);\n    this.bookmarkedOnly = this.bookmarkedOnly.bind(this);\n    this.updateMoviesByCheckbox = this.updateMoviesByCheckbox.bind(this);\n    this.selectedGenre = this.selectedGenre.bind(this);\n    this.updateMoviesByGenre = this.updateMoviesByGenre.bind(this);\n    this.addNewMovie = this.addNewMovie.bind(this);\n  }\n  searchText = (event) => {\n    const { target } = event;\n    this.setState(\n      {\n        [target.name]: target.value,\n      },\n      this.updateMoviesByText\n    );\n  };\n  bookmarkedOnly = (event) => {\n    const { target } = event;\n    this.setState(\n      {\n        [target.name]: target.checked,\n      },\n      this.updateMoviesByCheckbox\n    );\n  };\n  updateMoviesByText = () => {\n    let newList = this.state.movies.filter((movie) =>\n      movie.title.toLowerCase().includes(this.state.searchText.toLowerCase())\n    );\n    this.setState({\n      movies: newList,\n    });\n    if (this.state.searchText === \"\") {\n      this.setState({\n        movies: this.props.movies,\n      });\n    }\n  };\n\n  selectedGenre = (event) => {\n    const { target } = event;\n    this.setState(\n      {\n        [target.name]: target.value,\n      },\n      this.updateMoviesByGenre\n    );\n  };\n\n  updateMoviesByGenre = () => {\n    let newList = this.state.movies.filter(\n      (movie) => movie.genre === this.selectedGenre\n    );\n    this.setState({\n      movies: newList,\n    });\n    if (this.state.searchText === \"\") {\n      this.setState({\n        movies: this.props.movies,\n      });\n    }\n  };\n  addNewMovie = (movie) => {\n    this.setState((previousState, _props) => ({\n      movies: [...previousState.movies, movie],\n    }));\n  };\n\n  updateMoviesByCheckbox = () => {\n    if (this.state.bookmarkedOnly === true) {\n      let newList = this.state.movies.filter(\n        (movie) => movie.bookmarked === true\n      );\n      this.setState({\n        movies: newList,\n      });\n    } else if (this.state.bookmarkedOnly === false) {\n      this.setState({\n        movies: this.props.movies,\n      });\n    }\n  };\n  render() {\n    return (\n      <div>\n        <SearchBar\n          searchText={this.searchText}\n          bookmarkedOnly={this.bookmarkedOnly}\n          selectedGenre={this.selectedGenre}\n        />\n        <MovieList movies={this.state.movies} />\n        <AddMovie addNewMovie={this.addNewMovie} />\n      </div>\n    );\n  }\n}\n\nMovieLibrary.propTypes = { movie: PropTypes.func.isRequired };\n\nexport default MovieLibrary;"]},"metadata":{},"sourceType":"module"}