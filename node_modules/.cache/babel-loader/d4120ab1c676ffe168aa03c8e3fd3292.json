{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-movie-card-library-stateful/sd-07-project-movie-card-library-stateful/src/components/MovieLibrary.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\n\nclass MovieLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies: props.movies\n    };\n    this.searchTextInput = this.searchTextInput.bind(this);\n    this.updateMoviesByText = this.updateMoviesByText.bind(this);\n    this.bookmarkedOnlyInput = this.bookmarkedOnlyInput.bind(this);\n    this.updateMoviesByCheckbox = this.updateMoviesByCheckbox.bind(this);\n    this.selectedGenreInput = this.selectedGenreInput.bind(this);\n    this.updateMoviesByGenre = this.updateMoviesByGenre.bind(this);\n    this.addNewMovie = this.addNewMovie.bind(this);\n  }\n\n  searchTextInput(event) {\n    const {\n      target\n    } = event;\n    this.setState({\n      [target.name]: target.value\n    }, this.updateMoviesByText);\n  }\n\n  bookmarkedOnlyInput(event) {\n    const {\n      target\n    } = event;\n    this.setState({\n      [target.name]: target.checked\n    }, this.updateMoviesByCheckbox);\n  }\n\n  updateMoviesByText() {\n    const newList = this.state.movies.filter(movie => movie.title.toLowerCase().includes(this.state.searchText.toLowerCase()) || movie.subtitle.toLowerCase().includes(this.state.searchText.toLowerCase()) || movie.storyline.toLowerCase().includes(this.state.searchText.toLowerCase()));\n    this.setState({\n      movies: newList\n    });\n\n    if (this.state.searchText === '') {\n      this.setState({\n        movies: this.props.movies\n      });\n    }\n  }\n\n  selectedGenreInput(event) {\n    const {\n      target\n    } = event;\n    this.setState({\n      [target.name]: target.value\n    }, this.updateMoviesByGenre);\n  }\n\n  updateMoviesByGenre() {\n    const newList = this.state.movies.filter(movie => movie.genre.includes(this.selectedGenre));\n    this.setState({\n      movies: newList\n    });\n\n    if (this.state.searchText === '') {\n      this.setState({\n        movies: this.props.movies\n      });\n    }\n  }\n\n  addNewMovie(movie) {\n    this.setState(previousState => ({\n      movies: [...previousState.movies, movie]\n    }));\n  }\n\n  updateMoviesByCheckbox() {\n    if (this.state.bookmarkedOnly === true) {\n      const newList = this.state.movies.filter(movie => movie.bookmarked === true);\n      this.setState({\n        movies: newList\n      });\n    } else if (this.state.bookmarkedOnly === false) {\n      this.setState({\n        movies: this.props.movies\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      searchText: this.searchText,\n      onSearchTextChange: this.searchTextInput,\n      bookmarkedOnly: this.bookmarkedOnly,\n      onBookmarkedChange: this.bookmarkedOnlyInput,\n      selectedGenre: this.selectedGenre,\n      onSelectedGenreChange: this.selectedGenreInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(MovieList, {\n      movies: this.state.movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AddMovie, {\n      addNewMovie: this.addNewMovie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nMovieLibrary.propTypes = {\n  movies: PropTypes.array.isRequired\n};\nexport default MovieLibrary;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-movie-card-library-stateful/sd-07-project-movie-card-library-stateful/src/components/MovieLibrary.jsx"],"names":["React","PropTypes","MovieList","SearchBar","AddMovie","MovieLibrary","Component","constructor","props","state","searchText","bookmarkedOnly","selectedGenre","movies","searchTextInput","bind","updateMoviesByText","bookmarkedOnlyInput","updateMoviesByCheckbox","selectedGenreInput","updateMoviesByGenre","addNewMovie","event","target","setState","name","value","checked","newList","filter","movie","title","toLowerCase","includes","subtitle","storyline","genre","previousState","bookmarked","render","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\n\n\nclass MovieLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies: props.movies,\n    };\n    this.searchTextInput = this.searchTextInput.bind(this);\n    this.updateMoviesByText = this.updateMoviesByText.bind(this);\n    this.bookmarkedOnlyInput = this.bookmarkedOnlyInput.bind(this);\n    this.updateMoviesByCheckbox = this.updateMoviesByCheckbox.bind(this);\n    this.selectedGenreInput = this.selectedGenreInput.bind(this);\n    this.updateMoviesByGenre = this.updateMoviesByGenre.bind(this);\n    this.addNewMovie = this.addNewMovie.bind(this);\n  }\n  searchTextInput(event) {\n    const { target } = event;\n    this.setState(\n      { [target.name]: target.value },\n      this.updateMoviesByText,\n    );\n  }\n  bookmarkedOnlyInput(event) {\n    const { target } = event;\n    this.setState(\n      { [target.name]: target.checked },\n      this.updateMoviesByCheckbox,\n    );\n  }\n  updateMoviesByText() {\n    const newList = this.state.movies.filter((movie) =>\n      movie.title.toLowerCase().includes(this.state.searchText.toLowerCase()) ||\n      movie.subtitle.toLowerCase().includes(this.state.searchText.toLowerCase()) ||\n      movie.storyline.toLowerCase().includes(this.state.searchText.toLowerCase())\n    );\n    this.setState({ movies: newList });\n    if (this.state.searchText === '') {\n      this.setState({ movies: this.props.movies });\n    }\n  }\n\n  selectedGenreInput(event) {\n    const { target } = event;\n    this.setState(\n      { [target.name]: target.value },\n      this.updateMoviesByGenre,\n    );\n  }\n\n  updateMoviesByGenre() {\n    const newList = this.state.movies.filter(\n      (movie) => movie.genre.includes(this.selectedGenre),\n    );\n    this.setState({ movies: newList });\n    if (this.state.searchText === '') {\n      this.setState({ movies: this.props.movies });\n    }\n  }\n  addNewMovie(movie) {\n    this.setState((previousState) => ({ movies: [...previousState.movies, movie] }));\n  }\n\n  updateMoviesByCheckbox() {\n    if (this.state.bookmarkedOnly === true) {\n      const newList = this.state.movies.filter((movie) => movie.bookmarked === true);\n      this.setState({ movies: newList });\n    } else if (this.state.bookmarkedOnly === false) {\n      this.setState({ movies: this.props.movies });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <SearchBar\n          searchText={this.searchText}\n          onSearchTextChange={this.searchTextInput}\n          bookmarkedOnly={this.bookmarkedOnly}\n          onBookmarkedChange={this.bookmarkedOnlyInput}\n          selectedGenre={this.selectedGenre}\n          onSelectedGenreChange={this.selectedGenreInput}\n        />\n        <MovieList movies={this.state.movies} />\n        <AddMovie addNewMovie={this.addNewMovie} />\n      </div>\n    );\n  }\n}\n\nMovieLibrary.propTypes = { movies: PropTypes.array.isRequired };\n\nexport default MovieLibrary;\n"]},"metadata":{},"sourceType":"module"}