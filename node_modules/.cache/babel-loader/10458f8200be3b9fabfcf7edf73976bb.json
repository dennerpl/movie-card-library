{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-movie-card-library-stateful/sd-07-project-movie-card-library-stateful/src/components/MovieLibrary.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\n\nclass MovieLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies: props.movies\n    };\n    this.searchText = this.searchText.bind(this);\n    this.updateMoviesByText = this.updateMoviesByText.bind(this);\n    this.bookmarkedOnly = this.bookmarkedOnly.bind(this);\n    this.updateMoviesByCheckbox = this.updateMoviesByCheckbox.bind(this);\n    this.selectedGenre = this.selectedGenre.bind(this);\n    this.updateMoviesByGenre = this.updateMoviesByGenre.bind(this);\n    this.addNewMovie = this.addNewMovie.bind(this);\n  }\n\n  searchText(event) {\n    const {\n      target\n    } = event;\n    this.setState({\n      [target.name]: target.value\n    }, this.updateMoviesByText);\n  }\n\n  bookmarkedOnly(event) {\n    const {\n      target\n    } = event;\n    this.setState({\n      [target.name]: target.checked\n    }, this.updateMoviesByCheckbox);\n  }\n\n  updateMoviesByText() {\n    const newList = this.state.movies.filter(movie => movie.title.toLowerCase().includes(this.state.searchText.toLowerCase()));\n    this.setState({\n      movies: newList\n    });\n\n    if (this.state.searchText === \"\") {\n      this.setState({\n        movies: this.props.movies\n      });\n    }\n  }\n\n  selectedGenre(event) {\n    const {\n      target\n    } = event;\n    this.setState({\n      [target.name]: target.value\n    }, this.updateMoviesByGenre);\n  }\n\n  updateMoviesByGenre() {\n    const newList = this.state.movies.filter(movie => movie.genre === this.selectedGenre);\n    this.setState({\n      movies: newList\n    });\n\n    if (this.state.searchText === \"\") {\n      this.setState({\n        movies: this.props.movies\n      });\n    }\n  }\n\n  addNewMovie(movie) {\n    this.setState((previousState, _props) => ({\n      movies: [...previousState.movies, movie]\n    }));\n  }\n\n  updateMoviesByCheckbox() {\n    if (this.state.bookmarkedOnly === true) {\n      const newList = this.state.movies.filter(movie => movie.bookmarked === true);\n      this.setState({\n        movies: newList\n      });\n    } else if (this.state.bookmarkedOnly === false) {\n      this.setState({\n        movies: this.props.movies\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      searchText: this.searchText,\n      bookmarkedOnly: this.bookmarkedOnly,\n      selectedGenre: this.selectedGenre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(MovieList, {\n      movies: this.state.movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AddMovie, {\n      addNewMovie: this.addNewMovie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nMovieLibrary.propTypes = {\n  movies: PropTypes.func.isRequired\n};\nexport default MovieLibrary;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-movie-card-library-stateful/sd-07-project-movie-card-library-stateful/src/components/MovieLibrary.jsx"],"names":["React","PropTypes","MovieList","SearchBar","AddMovie","MovieLibrary","Component","constructor","props","state","searchText","bookmarkedOnly","selectedGenre","movies","bind","updateMoviesByText","updateMoviesByCheckbox","updateMoviesByGenre","addNewMovie","event","target","setState","name","value","checked","newList","filter","movie","title","toLowerCase","includes","genre","previousState","_props","bookmarked","render","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\n\n\nclass MovieLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies: props.movies,\n    };\n    this.searchText = this.searchText.bind(this);\n    this.updateMoviesByText = this.updateMoviesByText.bind(this);\n    this.bookmarkedOnly = this.bookmarkedOnly.bind(this);\n    this.updateMoviesByCheckbox = this.updateMoviesByCheckbox.bind(this);\n    this.selectedGenre = this.selectedGenre.bind(this);\n    this.updateMoviesByGenre = this.updateMoviesByGenre.bind(this);\n    this.addNewMovie = this.addNewMovie.bind(this);\n  }\n  searchText(event) {\n    const { target } = event;\n    this.setState(\n      { [target.name]: target.value },\n      this.updateMoviesByText\n    );\n  }\n  bookmarkedOnly(event) {\n    const { target } = event;\n    this.setState(\n      {\n        [target.name]: target.checked,\n      },\n      this.updateMoviesByCheckbox\n    );\n  }\n  updateMoviesByText() {\n    const newList = this.state.movies.filter((movie) =>\n      movie.title.toLowerCase().includes(this.state.searchText.toLowerCase())\n    );\n    this.setState({\n      movies: newList,\n    });\n    if (this.state.searchText === \"\") {\n      this.setState({\n        movies: this.props.movies,\n      });\n    }\n  }\n\n  selectedGenre(event) {\n    const { target } = event;\n    this.setState(\n      {\n        [target.name]: target.value,\n      },\n      this.updateMoviesByGenre\n    );\n  }\n\n  updateMoviesByGenre() {\n    const newList = this.state.movies.filter(\n      (movie) => movie.genre === this.selectedGenre\n    );\n    this.setState({\n      movies: newList,\n    });\n    if (this.state.searchText === \"\") {\n      this.setState({\n        movies: this.props.movies,\n      });\n    }\n  }\n  addNewMovie(movie) {\n    this.setState((previousState, _props) => ({\n      movies: [...previousState.movies, movie],\n    }));\n  }\n\n  updateMoviesByCheckbox() {\n    if (this.state.bookmarkedOnly === true) {\n      const newList = this.state.movies.filter(\n        (movie) => movie.bookmarked === true\n      );\n      this.setState({\n        movies: newList,\n      });\n    } else if (this.state.bookmarkedOnly === false) {\n      this.setState({\n        movies: this.props.movies,\n      });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <SearchBar\n          searchText={this.searchText}\n          bookmarkedOnly={this.bookmarkedOnly}\n          selectedGenre={this.selectedGenre}\n        />\n        <MovieList movies={this.state.movies} />\n        <AddMovie addNewMovie={this.addNewMovie} />\n      </div>\n    );\n  }\n}\n\nMovieLibrary.propTypes = { movies: PropTypes.func.isRequired };\n\nexport default MovieLibrary;\n"]},"metadata":{},"sourceType":"module"}