{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-movie-card-library-stateful/sd-07-project-movie-card-library-stateful/src/components/MovieLibrary.jsx\";\nimport React from 'react';\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\n\nclass MovieLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.searchText = event => {\n      const {\n        target\n      } = event;\n      this.setState({\n        [target.name]: target.value\n      }, this.updateMoviesByText);\n    };\n\n    this.bookmarkedOnly = event => {\n      const {\n        target\n      } = event;\n      this.setState({\n        [target.name]: target.checked\n      }, this.updateMoviesByCheckbox);\n    };\n\n    this.updateMoviesByText = () => {\n      let newList = this.state.movies.filter(movie => movie.title.toLowerCase().includes(this.state.searchText.toLowerCase()));\n      this.setState({\n        movies: newList\n      });\n\n      if (this.state.searchText === '') {\n        this.setState({\n          movies: this.props.movies\n        });\n      }\n    };\n\n    this.selectedGenre = event => {\n      const {\n        target\n      } = event;\n      this.setState({\n        [target.name]: target.value\n      }, this.updateMoviesByGenre);\n    };\n\n    this.updateMoviesByGenre = () => {\n      let newList = this.state.movies.filter(movie => movie.genre === this.selectedGenre);\n      this.setState({\n        movies: newList\n      });\n\n      if (this.state.searchText === '') {\n        this.setState({\n          movies: this.props.movies\n        });\n      }\n    };\n\n    this.updateMoviesByCheckbox = () => {\n      if (this.state.bookmarkedOnly === true) {\n        let newList = this.state.movies.filter(movie => movie.bookmarked === true);\n        this.setState({\n          movies: newList\n        });\n      } else if (this.state.bookmarkedOnly === false) {\n        this.setState({\n          movies: this.props.movies\n        });\n      }\n    };\n\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies: props.movies\n    };\n    this.searchText = this.searchText.bind(this);\n    this.updateMoviesByText = this.updateMoviesByText.bind(this);\n    this.bookmarkedOnly = this.bookmarkedOnly.bind(this);\n    this.updateMoviesByCheckbox = this.updateMoviesByCheckbox.bind(this);\n    this.selectedGenre = this.selectedGenre.bind(this);\n    this.updateMoviesByGenre = this.updateMoviesByGenre.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      searchText: this.searchText,\n      bookmarkedOnly: this.bookmarkedOnly,\n      selectedGenre: this.selectedGenre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(MovieList, {\n      movies: this.state.movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(AddMovie, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default MovieLibrary;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-movie-card-library-stateful/sd-07-project-movie-card-library-stateful/src/components/MovieLibrary.jsx"],"names":["React","MovieList","SearchBar","AddMovie","MovieLibrary","Component","constructor","props","searchText","event","target","setState","name","value","updateMoviesByText","bookmarkedOnly","checked","updateMoviesByCheckbox","newList","state","movies","filter","movie","title","toLowerCase","includes","selectedGenre","updateMoviesByGenre","genre","bookmarked","bind","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\n\nclass MovieLibrary extends React.Component {\n    constructor (props) {\n        super (props)\n        this.state = {\n            searchText: '',\n            bookmarkedOnly: false,\n            selectedGenre: '',\n            movies: props.movies\n        }\n        this.searchText = this.searchText.bind(this);\n        this.updateMoviesByText = this.updateMoviesByText.bind(this);\n        this.bookmarkedOnly = this.bookmarkedOnly.bind(this);\n        this.updateMoviesByCheckbox = this.updateMoviesByCheckbox.bind(this);\n        this.selectedGenre = this.selectedGenre.bind(this);\n        this.updateMoviesByGenre = this.updateMoviesByGenre.bind(this);\n        \n    }\n    searchText = (event) => {\n        const {target} = event\n        this.setState({\n          [target.name]: target.value\n        }, this.updateMoviesByText)\n    }\n    bookmarkedOnly= (event) => {\n        const {target} = event\n        this.setState({\n          [target.name]: target.checked\n        }, this.updateMoviesByCheckbox)\n    }\n    updateMoviesByText = () => {\n        let newList = this.state.movies.filter((movie) => movie.title.toLowerCase().includes(this.state.searchText.toLowerCase()))\n        this.setState({\n            movies: newList\n        })\n        if(this.state.searchText === '') {\n            this.setState({\n                movies: this.props.movies\n            })\n        }\n    }\n    \n    selectedGenre = (event) => {\n        const {target} = event\n        this.setState({\n          [target.name]: target.value\n        }, this.updateMoviesByGenre)\n    }\n\n    updateMoviesByGenre = () => {\n        let newList = this.state.movies.filter((movie) => movie.genre === this.selectedGenre)\n        this.setState({\n            movies: newList\n        })\n        if(this.state.searchText === '') {\n            this.setState({\n                movies: this.props.movies\n            })\n        }\n    }\n\n    updateMoviesByCheckbox = () => {\n        if (this.state.bookmarkedOnly === true) {\n            let newList = this.state.movies.filter((movie) => movie.bookmarked === true)\n            this.setState({\n                movies: newList\n            })\n        } else if(this.state.bookmarkedOnly === false) {\n            this.setState({\n                movies: this.props.movies\n            })\n        }\n    }\n  render() {\n\n    return (\n        <div>\n            <SearchBar searchText={this.searchText} bookmarkedOnly={this.bookmarkedOnly} selectedGenre={this.selectedGenre} />\n            <MovieList movies={this.state.movies} />\n            <AddMovie />\n        </div>\n    );\n  }\n}\n\nexport default MovieLibrary;"]},"metadata":{},"sourceType":"module"}